{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"region": {
			"defaultValue": "eurw",
			"allowedValues": [
				"eurw",
				"eurn",
				"uswest",
				"asia"
			],
			"type": "string",
			"metadata": {
				"description": "Deployment region"
			}
		},
		"virtualNetworkName": {
			"defaultValue": "core-vnt-01",
			"type": "string",
			"metadata": {
				"description": "Virtual Network name"
			}
		},
		"vnetExistingRGName": {
			"defaultValue": "networking-rg-core",
			"type": "string",
			"metadata": {
				"description": "Name of Resource Group where existing Vnet is held"
			}
		},
		"Subnet1Prefix": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 1 Prefix"
			}
		},
		"Subnet1Name": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 1 Name"
			}
		},
		"subnet1StartAddress": {
			"type": "string",
			"metadata": {
				"description": "Subnet 1 Starting IP Address"
			}
		},
		"Subnet2Prefix": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 2 Prefix"
			}
		},
		"Subnet2Name": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 2 Name"
			}
		},
		"subnet2StartAddress": {
			"type": "string",
			"metadata": {
				"description": "Subnet 2 Starting IP Address"
			}
		},
		"Subnet3Prefix": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 3 Prefix"
			}
		},
		"Subnet3Name": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 3 Name"
			}
		},
		"subnet3StartAddress": {
			"type": "string",
			"metadata": {
				"description": "Subnet 3 Starting IP Address"
			}
		},
		"Subnet4Prefix": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 4 Prefix"
			}
		},
		"Subnet4Name": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Subnet 4 Name"
			}
		},
		"subnet4StartAddress": {
			"type": "string",
			"metadata": {
				"description": "Subnet 4 Starting IP Address"
			}
		},
		"adminUsername": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"adminPassword": {
			"defaultValue": "",
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"sshPublicKey": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "SSH Key for the virtual machines"
			}
		},
		"authenticationType": {
			"defaultValue": "",
			"allowedValues": [
				"password",
				"sshPublicKey"
			],
			"type": "string",
			"metadata": {
				"description": "Authentication Type to chose for the Virtual Machines"
			}
		},
		"vmName-Prefix": {
			"defaultValue": "asav",
			"type": "string",
			"metadata": {
				"description": "Prefix for the Virtual Machine name."
			}
		},
		"newStorageAccountName-Prefix": {
			"type": "string",
			"metadata": {
				"description": "Storage Account name prefix where the Virtual Machine's disks will be placed."
			}
		},
		"storageAccountType": {
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS"
			],
			"type": "string",
			"metadata": {
				"description": "The type of storage account created."
			}
		},
		"publicIPAddressName": {
			"defaultValue": "",
			"type": "string",
			"metadata": {
				"description": "Name of the Public IP Address name of the node"
			}
		},
		"vmSize": {
			"defaultValue": "Standard_D3_v2",
			"allowedValues": [
				"Standard_D3",
				"Standard_D3_v2"
			],
			"type": "string",
			"metadata": {
				"description": "Size of the Virtual Machine"
			}
		},
		"tags": {
			"type": "object",
			"metadata": {
				"description": "Default tags required, passed in as a hash"
			}
		}
	},
	"variables": {
		"imagePublisher": "cisco",
		"imageOffer": "cisco-asav",
		"imageSKU": "asav-azure-byol",
		"ASAvimageVersion": "98.1.204",
		"vmName-a": "[concat(parameters('region'), '-', parameters('vmName-prefix'), '-', 'a')]",
		"vmName-b": "[concat(parameters('region'), '-', parameters('vmName-prefix'), '-', 'b')]",
		"newStorageAccountName-a": "[concat(parameters('region'), parameters('newStorageAccountName-Prefix'), 'aa')]",
		"newStorageAccountName-b": "[concat(parameters('region'), parameters('newStorageAccountName-Prefix'), 'bb')]",
		"OSDiskName-a": "[concat(variables('vmName-a'), '-os-md-core')]",
		"OSDiskName-b": "[concat(variables('vmName-b'), '-os-md-core')]",
		"publicIPAddressName-a": "[concat(variables('vmName-a'), '-', parameters('publicIPAddressName'))]",
		"publicIPAddressName-b": "[concat(variables('vmName-b'), '-', parameters('publicIPAddressName'))]",
		"publicIPDnsName-a": "[concat(parameters('region'), '-', parameters('vmName-prefix'), '-vm-a-core')]",
		"publicIPDnsName-b": "[concat(parameters('region'), '-', parameters('vmName-prefix'), '-vm-b-core')]",
		"virtualNetworkName": "[concat(parameters('region'), '-', parameters('virtualNetworkName'))]",
		"vnetID": "[resourceId(parameters('vnetExistingRGName'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
		"subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet1Name'))]",
		"subnet2Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet2Name'))]",
		"subnet3Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet3Name'))]",
		"subnet4Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet4Name'))]",
		"vm1Subnet1AddressArray": "[split(parameters('subnet1StartAddress'), '.')]",
		"v1s1element1": "[string(variables('vm1Subnet1AddressArray')[0])]",
		"v1s1element2": "[string(variables('vm1Subnet1AddressArray')[1])]",
		"v1s1element3": "[string(variables('vm1Subnet1AddressArray')[2])]",
		"v1s1element4": "[string(variables('vm1Subnet1AddressArray')[3])]",
		"vm1Subnet1Address": "[parameters('subnet1StartAddress')]",
		"vm2Subnet1Address": "[concat(variables('v1s1element1'), '.', variables('v1s1element2'), '.', variables('v1s1element3'), '.', string(add(int(variables('v1s1element4')),1)))]",
		"vm1Subnet2AddressArray": "[split(parameters('subnet2StartAddress'), '.')]",
		"v1s2element1": "[string(variables('vm1Subnet2AddressArray')[0])]",
		"v1s2element2": "[string(variables('vm1Subnet2AddressArray')[1])]",
		"v1s2element3": "[string(variables('vm1Subnet2AddressArray')[2])]",
		"v1s2element4": "[string(variables('vm1Subnet2AddressArray')[3])]",
		"vm1Subnet2Address": "[parameters('subnet2StartAddress')]",
		"vm2Subnet2Address": "[concat(variables('v1s2element1'), '.', variables('v1s2element2'), '.', variables('v1s2element3'), '.', string(add(int(variables('v1s2element4')),1)))]",
		"vm1Subnet3AddressArray": "[split(parameters('subnet3StartAddress'), '.')]",
		"v1s3element1": "[string(variables('vm1Subnet3AddressArray')[0])]",
		"v1s3element2": "[string(variables('vm1Subnet3AddressArray')[1])]",
		"v1s3element3": "[string(variables('vm1Subnet3AddressArray')[2])]",
		"v1s3element4": "[string(variables('vm1Subnet3AddressArray')[3])]",
		"vm1Subnet3Address": "[parameters('subnet3StartAddress')]",
		"vm2Subnet3Address": "[concat(variables('v1s3element1'), '.', variables('v1s3element2'), '.', variables('v1s3element3'), '.', string(add(int(variables('v1s3element4')),1)))]",
		"vm1Subnet4AddressArray": "[split(parameters('subnet4StartAddress'), '.')]",
		"v1s4element1": "[string(variables('vm1Subnet4AddressArray')[0])]",
		"v1s4element2": "[string(variables('vm1Subnet4AddressArray')[1])]",
		"v1s4element3": "[string(variables('vm1Subnet4AddressArray')[2])]",
		"v1s4element4": "[string(variables('vm1Subnet4AddressArray')[3])]",
		"vm1Subnet4Address": "[parameters('subnet4StartAddress')]",
		"vm2Subnet4Address": "[concat(variables('v1s4element1'), '.', variables('v1s4element2'), '.', variables('v1s4element3'), '.', string(add(int(variables('v1s4element4')),1)))]",
		"availset": "[concat(parameters('region'), '-', parameters('vmName-prefix'), '-as-core')]",
		"nsgname": "[concat(parameters('region'), '-', parameters('vmName-Prefix'), '-nsg-core')]",
		"apiVer": "2015-06-15",
		"storage_apiVer": "2017-06-01",
		"publicIPAddressType": "Dynamic",
		"adminUsername": "[parameters('adminUsername')]",
		"adminPassword": "[parameters('adminPassword')]",
		"sshPublicKey-A": "[parameters('sshPublicKey')]",
		"sshPublicKey-B": "[parameters('sshPublicKey')]",
		"authenticationType": "[parameters('authenticationType')]",
		"sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
		"osProfile-A": "[variables(concat('osprofile',variables('authenticationType'), '-a')) ]",
		"osProfile-B": "[variables(concat('osprofile',variables('authenticationType'), '-b')) ]",
		"osProfilesshPublicKey-a": {
			"computername": "[variables('vmName-a')]",
			"adminUsername": "[parameters('adminUsername')]",
			"linuxConfiguration": {
				"disablePasswordAuthentication": "true",
				"ssh": {
					"publicKeys": [
						{
							"path": "[variables('sshKeyPath')]",
							"keyData": "[variables('sshPublicKey-a')]"
						}
					]
				}
			}
		},
		"osProfilepassword-a": {
			"computername": "[concat(variables('vmName-a'))]",
			"adminUsername": "[parameters('adminUsername')]",
			"adminPassword": "[parameters('adminPassword')]"
		},
		"osProfilesshPublicKey-b": {
			"computername": "[variables('vmName-b')]",
			"adminUsername": "[parameters('adminUsername')]",
			"linuxConfiguration": {
				"disablePasswordAuthentication": "true",
				"ssh": {
					"publicKeys": [
						{
							"path": "[variables('sshKeyPath')]",
							"keyData": "[variables('sshPublicKey-b')]"
						}
					]
				}
			}
		},
		"osProfilepassword-b": {
			"computername": "[concat(variables('vmName-b'))]",
			"adminUsername": "[parameters('adminUsername')]",
			"adminPassword": "[parameters('adminPassword')]"
		}
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('newStorageAccountName-a'))]",
			"apiVersion": "[variables('storage_apiVer')]",
			"kind": "Storage",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"sku": {
				"name": "[parameters('storageAccountType')]"
			},
			"properties": {
				"encryption": {
					"keySource": "Microsoft.Storage",
					"services": {
						"blob": {
							"enabled": true
						}
					}
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('newStorageAccountName-b'))]",
			"apiVersion": "[variables('storage_apiVer')]",
			"kind": "Storage",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"sku": {
				"name": "[parameters('storageAccountType')]"
			},
			"properties": {
				"encryption": {
					"keySource": "Microsoft.Storage",
					"services": {
						"blob": {
							"enabled": true
						}
					}
				}
			}
		},
		{
			"name": "[variables('availSet')]",
			"type": "Microsoft.Compute/availabilitySets",
			"apiVersion": "2017-03-30",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"sku": {
				"name": "Aligned"
			},
			"properties": {
				"platformFaultDomainCount": 2,
				"platformUpdateDomainCount": 5
			}
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName-a')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[variables('publicIPDnsName-a')]"
				}
			}
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName-b')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[variables('publicIPDnsName-b')]"
				}
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('nsgname')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"securityRules": [
					{
						"name": "SSH-Rule",
						"properties": {
							"description": "Allow SSH",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					},
					{
						"name": "UDP-Rule1",
						"properties": {
							"description": "Allow UDP",
							"protocol": "Udp",
							"sourcePortRange": "*",
							"destinationPortRange": "500",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 101,
							"direction": "Inbound"
						}
					},
					{
						"name": "UDP-Rule2",
						"properties": {
							"description": "Allow UDP",
							"protocol": "Udp",
							"sourcePortRange": "*",
							"destinationPortRange": "4500",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 102,
							"direction": "Inbound"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/routeTables",
			"name": "[concat(parameters('region'), '-', parameters('Subnet1Name'), '-asav-routetable')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"routes": [
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet2Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet2Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[variables('vm1Subnet1Address')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet3Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet3Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[variables('vm1Subnet1Address')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet4Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet4Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[variables('vm1Subnet1Address')]"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/routeTables",
			"name": "[concat(parameters('region'), '-', parameters('Subnet2Name'), '-asav-routetable')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"routes": [
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet1Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet1Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet2StartAddress')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet3Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet3Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet2StartAddress')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet4Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet4Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet2StartAddress')]"
						}
					},
					{
						"name": "[concat('default-route-to-', parameters('region'), '-asav')]",
						"properties": {
							"addressPrefix": "0.0.0.0/0",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet2StartAddress')]"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/routeTables",
			"name": "[concat(parameters('region'), '-', parameters('Subnet3Name'), '-asav-routetable')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"routes": [
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet1Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet1Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet3StartAddress')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet2Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet2Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet3StartAddress')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet4Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet4Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet3StartAddress')]"
						}
					},
					{
						"name": "[concat('default-route-to-', parameters('region'), '-asav')]",
						"properties": {
							"addressPrefix": "0.0.0.0/0",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet3StartAddress')]"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/routeTables",
			"name": "[concat(parameters('region'), '-', parameters('Subnet4Name'), '-asav-routetable')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"routes": [
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet1Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet1Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet4StartAddress')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet2Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet2Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet4StartAddress')]"
						}
					},
					{
						"name": "[concat('route-', parameters('region'), '-', parameters('Subnet3Name'), '-to-asav')]",
						"properties": {
							"addressPrefix": "[parameters('Subnet3Prefix')]",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet4StartAddress')]"
						}
					},
					{
						"name": "[concat('default-route-to-', parameters('region'), '-asav')]",
						"properties": {
							"addressPrefix": "0.0.0.0/0",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[parameters('subnet4StartAddress')]"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-a'),'-nic0-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm1Subnet1Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet1Name'))]"
						},
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName-a'))]"
						}
					}
				}
			],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
				},
				"enableIPForwarding": true
			},
			"dependsOn": [
				"[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]",
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName-a'))]"
			]
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-b'),'-nic0-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm2Subnet1Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet1Name'))]"
						},
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName-b'))]"
						}
					}
				}
			],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
				},
				"enableIPForwarding": true
			},
			"dependsOn": [
				"[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]",
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName-b'))]"
			]
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-a'),'-nic1-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm1Subnet2Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet2Name'))]"
						}
					}
				}
			],
				"enableIPForwarding": true
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-b'),'-nic1-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm2Subnet2Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet2Name'))]"
						}
					}
				}
			],
				"enableIPForwarding": true
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-a'),'-nic2-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm1Subnet3Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet3Name'))]"
						}
					}
				}
			],
				"enableIPForwarding": true
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-b'),'-nic2-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm2Subnet3Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet3Name'))]"
						}
					}
				}
			],
				"enableIPForwarding": true
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-a'),'-nic3-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm1Subnet4Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet4Name'))]"
						}
					}
				}
			],
				"enableIPForwarding": true
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('vmName-b'),'-nic3-core')]",
			"apiVersion": "[variables('apiVer')]",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('vm2Subnet4Address')]",
						"subnet": {
							"id": "[concat(variables('vnetID'), '/subnets/', parameters('Subnet4Name'))]"
						}
					}
				}
			],
				"enableIPForwarding": true
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmName-a'),'-vm-core')]",
			"apiVersion": "2017-03-30",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"plan": {
				"name": "asav-azure-byol",
				"publisher": "cisco",
				"product": "cisco-asav"
			},
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets/', variables('availSet'))]"
				},
				"osProfile": "[variables('osProfile-a')]",
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('imageSKU')]",
						"version": "[variables('ASAvimageVersion')]"
					},
					"osDisk": {
						"name": "[variables('OSDiskName-a')]",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"properties": {
								"primary": true
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-a'),'-nic0-core'))]"
						},
						{
							"properties": {
								"primary": false
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-a'),'-nic1-core'))]"
						},
						{
							"properties": {
								"primary": false
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-a'),'-nic2-core'))]"
						},
						{
							"properties": {
								"primary": false
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-a'),'-nic3-core'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageuri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName-a')), '2015-06-15').primaryEndpoints.blob)]"
					}
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName-a'))]",
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName-a'))]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-a'),'-nic0-core')]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-a'),'-nic1-core')]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-a'),'-nic2-core')]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-a'),'-nic3-core')]",
				"[concat('Microsoft.Compute/availabilitySets/',variables('availSet'))]"
			]
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmName-b'),'-vm-core')]",
			"apiVersion": "2017-03-30",
			"location": "[resourceGroup().location]",
			"tags": "[parameters('tags')]",
			"plan": {
				"name": "asav-azure-byol",
				"publisher": "cisco",
				"product": "cisco-asav"
			},
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets/', variables('availSet'))]"
				},
				"osProfile": "[variables('osProfile-b')]",
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('imageSKU')]",
						"version": "[variables('ASAvimageVersion')]"
					},
					"osDisk": {
						"name": "[variables('OSDiskName-b')]",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"properties": {
								"primary": true
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-b'),'-nic0-core'))]"
						},
						{
							"properties": {
								"primary": false
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-b'),'-nic1-core'))]"
						},
						{
							"properties": {
								"primary": false
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-b'),'-nic2-core'))]"
						},
						{
							"properties": {
								"primary": false
							},
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName-b'),'-nic3-core'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageuri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName-b')), '2015-06-15').primaryEndpoints.blob)]"
					}
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName-b'))]",
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName-b'))]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-b'),'-nic0-core')]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-b'),'-nic1-core')]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-b'),'-nic2-core')]",
				"[concat('Microsoft.Network/networkInterfaces/',variables('vmName-b'),'-nic3-core')]",
				"[concat('Microsoft.Compute/availabilitySets/',variables('availSet'))]"
			]
		}
	],
	"outputs": {
		"publicIpId-a": {
			"value": "[resourceId(concat('Microsoft.Network', '/', 'publicIPAddresses'), variables('publicIPAddressName-a'))]",
			"type": "string"
		},
		"publicIpId-b": {
			"value": "[resourceId(concat('Microsoft.Network', '/', 'publicIPAddresses'), variables('publicIPAddressName-b'))]",
			"type": "string"
		  },
		"fqdn-a": {
			"value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName-a')), providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]",
			"type": "string"
		},
		"fqdn-b": {
			"value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName-b')), providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]",
			"type": "string"
		  }
	  }
}